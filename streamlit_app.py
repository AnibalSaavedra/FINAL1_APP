
import streamlit as st
from fpdf import FPDF
from datetime import datetime

def ejecutar_test_disociacion():
    st.header("üß† M√≥dulo 1: Test de disociaci√≥n o trauma")
    preguntas = [
        ("Me desconecto f√°cilmente de lo que estoy sintiendo en situaciones dif√≠ciles.", "explicaci√≥n 1"),
        ("A veces act√∫o como si estuviera en piloto autom√°tico y luego no recuerdo bien lo que hice.", "explicaci√≥n 2"),
        ("Me cuesta identificar lo que siento o ponerlo en palabras.", "explicaci√≥n 3"),
    ]
    respuestas = []
    for pregunta, explicacion in preguntas:
        with st.expander(pregunta):
            st.markdown(f"üõà {explicacion}")
            respuesta = st.slider("Selecciona un nivel:", 1, 5, 3, key=pregunta)
            respuestas.append(respuesta)
    if st.button("Generar informe - Test Disociaci√≥n"):
        puntaje = sum(respuestas)
        st.success(f"Puntaje total: {puntaje}")
        generar_pdf("Test de disociaci√≥n", respuestas)

def ejecutar_test_epigenetico():
    st.header("üß¨ M√≥dulo 2: Estado epigen√©tico emocional")
    preguntas = [
        ("Mi madre vivi√≥ situaciones traum√°ticas antes de que yo naciera.", "Herencia emocional materna"),
        ("Mi padre fue emocionalmente ausente o r√≠gido.", "Herencia emocional paterna"),
        ("Siento que repito patrones familiares aunque no quiera.", "Epigen√©tica transgeneracional"),
    ]
    respuestas = []
    for pregunta, explicacion in preguntas:
        with st.expander(pregunta):
            st.markdown(f"üõà {explicacion}")
            respuesta = st.slider("Selecciona un nivel:", 1, 5, 3, key=pregunta)
            respuestas.append(respuesta)
    if st.button("Generar informe - Estado epigen√©tico"):
        puntaje = sum(respuestas)
        st.success(f"Puntaje total: {puntaje}")
        generar_pdf("Estado epigen√©tico emocional", respuestas)

def ejecutar_test_condiciones_clinicas():
    st.header("ü©∫ M√≥dulo 3: Condiciones cl√≠nicas")
    categorias = {
        "Metabolismo": ["Fatiga despu√©s de comer", "Aumento de peso sin causa aparente"],
        "Digesti√≥n": ["Distensi√≥n abdominal", "Dificultad para digerir ciertos alimentos"],
        "Inflamaci√≥n": ["Dolores articulares recurrentes", "Sensaci√≥n de cuerpo inflamado"],
    }
    respuestas = {}
    for categoria, items in categorias.items():
        st.subheader(f"üîπ {categoria}")
        for item in items:
            valor = st.radio(item, ["1 (Nunca)", "2 (A veces)", "3 (Frecuente)"], key=item)
            respuestas[item] = valor
    if st.button("Generar informe - Condiciones cl√≠nicas"):
        generar_pdf("Condiciones cl√≠nicas", list(respuestas.values()))

def generar_pdf(titulo, respuestas):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt="Informe MBI 360¬∞", ln=1, align="C")
    pdf.cell(200, 10, txt=f"M√≥dulo: {titulo}", ln=2, align="C")
    pdf.ln(10)
    for i, r in enumerate(respuestas, 1):
        pdf.cell(200, 10, txt=f"√çtem {i}: {r}", ln=1)
    fecha = datetime.now().strftime("%Y-%m-%d %H:%M")
    pdf.ln(10)
    pdf.cell(200, 10, txt=f"Fecha de generaci√≥n: {fecha}", ln=1)
    pdf.output("/mnt/data/informe_mbi360.pdf")
    st.success("‚úÖ Informe generado con √©xito.")
    st.download_button("Descargar informe", data=open("/mnt/data/informe_mbi360.pdf", "rb"), file_name="informe_mbi360.pdf")

# Interfaz principal
st.title("üåê MBI 360¬∞ ‚Äì Evaluaci√≥n Integral del Ser")
st.markdown("Bienvenido al sistema **MBI 360¬∞**, una herramienta para conocer en profundidad tu estado emocional, epigen√©tico, f√≠sico y energ√©tico.")
modulos = {
    "Test de disociaci√≥n o trauma": ejecutar_test_disociacion,
    "Estado epigen√©tico emocional": ejecutar_test_epigenetico,
    "Condiciones cl√≠nicas (metabolismo, digesti√≥n, inflamaci√≥n)": ejecutar_test_condiciones_clinicas,
}
seleccionados = st.multiselect("Selecciona los m√≥dulos que deseas realizar:", list(modulos.keys()))
for modulo in seleccionados:
    modulos[modulo]()
